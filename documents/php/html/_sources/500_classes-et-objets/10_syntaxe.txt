###############
Syntaxe de base
###############

**********************
Définition d'un classe
**********************

Une définition de classe basique commence par le mot-clé ``class``, suivi du nom de la classe. 
Suit une paire d'accolades contenant la définition des propriétés et des méthodes appartenant à la classe.

Le nom de la classe peut être quelconque à condition que ce ne soit pas un mot réservé en PHP. 
Un nom de classe valide commence par une lettre ou un underscore, suivi de n'importe quel nombre de chiffres, ou de lettres, ou d'underscores. 

Une classe peut contenir ses propres constantes, variables (appelées "propriétés" ou "attributs"), et fonctions (appelées "méthodes").

.. code-block:: php

    <?php
    class SimpleClass {
        // déclaration d'une propriété
        public $var = 'une valeur par défaut';

        // déclaration des méthodes
        public function displayVar() {
            echo $this->var;
        }
    }
    ?>

La pseudo-variable ``$this`` est disponible lorsqu'une méthode est appelée depuis un contexte objet. ``$this`` est une référence à l'objet appelant.

*******************
Instances de classe
*******************

Création d'une instance
=======================

Pour créer une instance d'une classe, le mot-clé ``new`` doit être utilisé.
Un objet sera alors systématiquement créé, à moins qu'il ait un constructeur défini qui lance une exception en cas d'erreur.
Les classes devraient être définies avant l'instanciation (dans certains cas, c'est impératif).

.. code-block:: php

    <?php
    $instance = new SimpleClass();

    // Ceci peut également être réalisé avec une variable :
    $className = 'Foo';
    $instance = new $className(); // Foo()
    ?>

Dans le contexte de la classe, il est possible de créer un nouvel objet avec ``new self`` et ``new parent``.

Assignation d'un objet
======================

Lors de l'assignation d'une instance déjà créée d'une classe à une variable, la nouvelle variable accédera à la même instance que l'objet qui a été assigné.

.. code-block:: php

    <?php

    $instance = new SimpleClass();

    $assigned   =  $instance;
    $reference  =& $instance;

    $instance->var = '$assigned aura cette valeur';

    $instance = null; // $instance et $reference deviennent null

    var_dump($instance); // Affiche NULL
    var_dump($reference); // Affiche NULL
    var_dump($assigned); // Affiche object(SimpleClass)#1 (1) {
                         //             ["var"]=>
                         //               string(30) "$assigned aura cette valeur"
                         //           }
    ?>